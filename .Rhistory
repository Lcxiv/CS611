data(ma.2.s)
data(ma.1.s)
install.packages("TSA")
data(rwalk)
rwalk
#Moving Averages (MA)
data(ma.1.s)
data(ma.2.s)
#Moving Averages (MA)
library('TSA')
library('TSA')
data(ma.1.s)
data(ma.2.s)
data(ma.1.s)
plot(ma.1.s)
plot(ma.2.s)
data(ma.2.s)
plot(ma.2.s)
data(ma1.2.s)
plot(ma1.2.s)
plot(x=zlag(ma1.2.s),y=ma1.2.s)
plot(x=zlag(ma1.2.s,2),y=ma1.2.s)
?arima.sim
library(TSA)
#2
set.seed(1224)
y.sim <- arima.sim(n=200,list(ma = c(-0.5)))
y.sim <- arima.sim(n=200,list(ma = c(-0.5)), mean(100), var(1))
y.sim <- arima.sim(n=200,list(ma = c(-0.5)), rand.gen = mean(100), var(1))
y.sim <- arima.sim(n=200,list(ma = c(-0.5)), mean(100), var(10))
y.sim <- arima.sim(n=200,list(ma = c(-0.5)), rand.gen = function(n,...)mean(100), var(10))
y.sim <- arima.sim(n=200,list(ma = c(-0.5)), rand.gen = function(n,...),mean(100), var(10))
y.sim <- arima.sim(n=200,list(ma = c(-0.5)), sd(10))
e = rnorm(200,mean = 100, sd=10)
y.sim <- arima.sim(list(ma = c(-0.5)), sd(10), innov = e)
y.sim <- arima.sim(n=200,list(ma = c(-0.5)), sd(10), innov = e)
e = rnorm(200,mean = 100, sd=10)
y.sim <- arima.sim(n=200,list(ma = c(-0.5)), sd(10), innov = e)
y.sim <- arima.sim(list(ma = c(-0.5)), sd(10), innov = e)
e = rnorm(mean = 100, sd=10)
y.sim <- arima.sim(n=200, list(ma = c(-0.5)), sd(10))
e = rnorm(200,mean = 100, sd=10)
y.sim <- arima.sim(n=200, list(ma = c(-0.5)), innov = e)
eacf(y.sim)
acf(y.sim)
y.sim
library(TSA)
##########################################6.21#############################################
set.seed(512)
y.sim <- arima.sim(n=60,list(order = c(1,3,1), ar=0.6,ma=-0.7), rand.gen = mu)
# 1
# -0.5/ 1+ 0.25 = -0.25
#
# 2
#
acf(y.sim, lag.max = 1)[1]
r1=rep(NA,10000)
for (k in 1:10000) {series=arima.sim(n=48, list(ar=0.7))
r1[k]=acf(series,lag.max=1,plot=F)$acf[1]}
hist(r1); mean(r1); sd(r1); median(r1)
y.sim <- arima.sim(n=48,list(ar = c(0.9)))
acf(y.sim)[1:5]
acf(y.sim)
acf(y.sim)
acf(y.sim)[:]
acf(y.sim)[1:3]
y.sim=arima.sim(n=100,list(ar=0.8,ma=-0.4))
plot(y=ARMAacf(ar=c(0.8),ma=c(-.4),lag.max=20)[-1],x=1:20,xlab='Lag',ylab='ACF',type='h',ylim=c(-.2,.6)); abline(h=0)
library(tidyquant)
library(forecast)
getSymbols("AAPL", from = '2020-12-01',
to = "2021-04-27",warnings = FALSE,
auto.assign = TRUE)
plot(AAPL$AAPL.Close)
Box.test(AAPL.Close)
Box.test(AAPL$AAPL.Close)
data <- ts(AAPL$AAPL.Close)
getSymbols("AAPL", from = '2020-12-01',
to = "2021-04-27",warnings = FALSE,
auto.assign = TRUE)
data <- ts(AAPL$AAPL.Close)
plot(data)
acf(data)
Box.test(data)
adf.test(data)
getSymbols("AAPL", from = '2020-12-01',
to = "2021-04-27",warnings = FALSE,
auto.assign = TRUE)
data <- ts(AAPL$AAPL.Close)
plot(data)
acf(data)
Box.test(data)
adf.test(data)
library(TSA)
library(tseries)
library(tidyquant)
library(forecast)
adf.test(data)
#################C###################
eacf(data)
library(boot)
#################D###################
AAPL_MA <- auto.arima(data)
View(AAPL_MA)
AAPL_MA$residuals
#################D###################
tsboot(AAPL_MA)
?tsboot
tsboot(AAPL_MA, ml)
tsboot(AAPL_MA, statistic = ml)
theStatistic = function(x) {...}
tsboot(AAPL_MA, statistic = theStatistic)
tsboot(AAPL_MA, statistic = theStatistic, R = 999)
tsboot(AAPL_MA, statistic = ml, R = 999)
tsboot(AAPL_MA, AAPL_MA.fun, R = 999)
AAPL_MA.fun <- function(tsb) {
ar.fit <- ar(tsb, order.max = 25)
c(ar.fit$order, mean(tsb), tsb)
}
tsboot(AAPL_MA, AAPL_MA.fun, R = 999)
tsboot(AAPL_MA, AAPL_MA.fun, R = 99)
tsboot(data, AAPL_MA.fun, R = 99)
boot <- tsboot(data, AAPL_MA.fun, R = 99)
table(boot$t[, 1])
table(boot$t[, ])
table(boot$t[, 50])
table(boot$t[1, 50])
table(boot$t[1:50])
table(boot$t[50, ])
table(boot$t[, ])
table(boot$t[, 1])
Box.test(data_res)
adf.test(data_res)
data_res <- AAPL_MA$residuals
data_res <- AAPL_MA$residuals
Box.test(data_res)
adf.test(data_res)
Box.test(data_res)
Box.test(data_res, lag = 1, type = c("Box-Pierce", "Ljung-Box"), fitdf = 0)
Box.test(data_res, lag = 1, type = "Ljung-Box", fitdf = 0)
Box.test(data_res, lag = 1, type = "Box-Pierce", fitdf = 0)
Box.test(data_res,  type = "Box-Pierce", fitdf = 0)
Box.test(data_res, type = "Ljung-Box", fitdf = 0)
